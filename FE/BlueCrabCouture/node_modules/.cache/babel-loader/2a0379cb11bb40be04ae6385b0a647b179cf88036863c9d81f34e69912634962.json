{"ast":null,"code":"import axios from \"axios\";\nconst api = \"http://localhost:8080/api/brand\";\nexport const getAllBrand = async () => {\n  try {\n    const respnse = await axios.get(api);\n    return respnse.data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const storeBrand = async brand => {\n  try {\n    await axios.post(api, brand);\n  } catch (error) {\n    throw error;\n  }\n};\nexport const deleteBrand = async id => {\n  try {\n    await axios.delete(`${api}/${id}`);\n  } catch (error) {\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","api","getAllBrand","respnse","get","data","error","storeBrand","brand","post","deleteBrand","id","delete"],"sources":["D:/FullStack/FullStack-BlueCrabCouture/FE/BlueCrabCouture/src/API/ApiBrand.js"],"sourcesContent":["import axios from \"axios\"\r\nconst api = \"http://localhost:8080/api/brand\"\r\n\r\nexport const getAllBrand = async () => {\r\n    try {\r\n        const respnse = await axios.get(api)\r\n        return respnse.data\r\n    } catch (error) {\r\n        throw error\r\n    }\r\n}\r\n\r\n\r\nexport const storeBrand = async (brand) => {\r\n    try {\r\n        await axios.post(api, brand)\r\n    } catch (error) {\r\n        throw error\r\n    }\r\n}\r\n\r\nexport const deleteBrand = async (id) => {\r\n    try {\r\n        await axios.delete(`${api}/${id}`)\r\n    } catch (error) {\r\n        throw error\r\n    }\r\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,MAAMC,GAAG,GAAG,iCAAiC;AAE7C,OAAO,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;EACnC,IAAI;IACA,MAAMC,OAAO,GAAG,MAAMH,KAAK,CAACI,GAAG,CAACH,GAAG,CAAC;IACpC,OAAOE,OAAO,CAACE,IAAI;EACvB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,MAAMA,KAAK;EACf;AACJ,CAAC;AAGD,OAAO,MAAMC,UAAU,GAAG,MAAOC,KAAK,IAAK;EACvC,IAAI;IACA,MAAMR,KAAK,CAACS,IAAI,CAACR,GAAG,EAAEO,KAAK,CAAC;EAChC,CAAC,CAAC,OAAOF,KAAK,EAAE;IACZ,MAAMA,KAAK;EACf;AACJ,CAAC;AAED,OAAO,MAAMI,WAAW,GAAG,MAAOC,EAAE,IAAK;EACrC,IAAI;IACA,MAAMX,KAAK,CAACY,MAAM,CAAE,GAAEX,GAAI,IAAGU,EAAG,EAAC,CAAC;EACtC,CAAC,CAAC,OAAOL,KAAK,EAAE;IACZ,MAAMA,KAAK;EACf;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}